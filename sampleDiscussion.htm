<html>
  <head>
    <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
    <script src="http://code.jquery.com/jquery-migrate-1.1.1.min.js"></script>
    <link href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css" rel="stylesheet"> </link>
    <link rel="stylesheet" href="assets/css/font-awesome.min.css">
    <script src="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"> </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
    </script>
  </head>
 <body>
   <div class="navbar navbar-inverse navbar-fixed-top">
     <div class="navbar-inner">
       <div class="container">
         <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
           <span class="icon-bar"></span>
           <span class="icon-bar"></span>
           <span class="icon-bar"></span>
         </button>
         <a class="brand" href="index.htm">  <i class="icon-legal"></i>  Nail it</a>
         <div class="nav-collapse collapse">
           <ul class="nav">
             <li><a href="index.htm">Home</a></li>
             <li><a href="about.htm">About</a></li>
             <li><a href="listView.htm">Browse Problems</a></li>
             <li><a href="inputView.htm">Input Problem</a></li>
           </ul>
           <form class="navbar-form pull-right">
             <input class="span2" type="text" placeholder="Email">
             <input class="span2" type="password" placeholder="Password">
             <button type="submit" class="btn">Sign in</button>
           </form>
         </div>
       </div>
     </div>
   </div>

   <div class="container">



     <div class="hero-unit">
       <p>  
     
       I'd be happy if someone could justify the union bound step in this proof in a more precise manner.
       At the top of page 5 in this article <a> http://www.gatsby.ucl.ac.uk/~risi/courses/ML2/2008/VC.pdf, </a> it is stated:

      \[\begin{aligned}
      \dot{x} &amp; = \sigma(y-x) \\
      \dot{y} &amp; = \rho x - y - xz \\
      \dot{z} &amp; = -\beta z + xy
      \end{aligned} \]


      The union bound is applied only on a finite set of hypotheses because two hypythesis $h$ and $h'$ only need to be counted as distinct
      if they differ on one of the samples in $S$ or $S'$. But if $S$ changes, so do the distinct hypothese that we bound on.
      The aforementioned $h$ and $h'$ may become or cease to be distinct. To conclude, the hypothese to apply the bound over, change with each sample.
      How exactly can this step be justified? What are the events(subsets of the sample space) in the union bound? 
     
       </p>
     </div>

     <div class="row">
       <div class="span6 offset1">
         <h4> <font color="red"> MikeMG </font> wrote:   </h4>
         <p>
         This is very easy, come on. Please note that:
         \[\begin{equation}
         32+2
         \end{equation} \]
         so taking derivative by e of  this small equation, we arive at the conclusian that you should go crazy.
         </p>
       </div>
     </div>


    <div class="row">
       <div class="span4 offset1">
         <h4> <font color="red"> Your Mother </font> wrote:   </h4>
         <p>
         Son you should better study law and not this crap. What is this, seriously. Look at this:


         \[\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}
         \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\
         \frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\
         \frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0
         \end{vmatrix}  \]

         </p>
       </div>
     </div>


     <div class="hero-unit">
       <p>  
       
       As the name suggests, object-oriented programming is related to objects. So far, we have used objects as loose aggregations of
       values, adding and altering their properties whenever we saw fit. In an object-oriented approach, objects are viewed as little
       worlds of their own, and the outside world may touch them only through a limited and well-defined interface, a number of specific
       methods and properties. The 'reached list' we used at the end of chapter 7 is an example of this: We used only three functions,
       makeReachedList, storeReached, and findReached to interact with it. These three functions form an interface for such objects.
     
       </p>
     </div>


     <div class="row">
       <div class="span6 offset1">
         <h4> <font color="red"> Samsung </font> wrote:   </h4>
         <p>

         HAI
         CAN HAS STDIO?
         PLZ OPEN FILE "LOLCATS.TXT"?
         AWSUM THX
         VISIBLE FILE
         O NOES
         INVISIBLE "ERROR!"
         KTHXBYE

         </p>
       </div>
       </div>
 



     <div class="row">
       <div class="span6 offset1">
         <h4> <font color="red"> Kosman </font> wrote:   </h4>
         <p>
         I talk crap because I eat shiet.
         </p>
       </div>
       </div>
 






    
     <div class="hero-unit">
         <h4> your comment or solution </h3>
       <div class="btn-toolbar">
         <div class="btn-group">
           <a class="btn" href="#"><i class="icon-align-left"></i></a>
           <a class="btn" href="#"><i class="icon-align-center"></i></a>
           <a class="btn" href="#"><i class="icon-align-right"></i></a>
           <a class="btn" href="#"><i class="icon-align-justify"></i></a>
           <a class="btn" href="#"><i class="icon-file"></i></a>
           <a class="btn" href="#"><i class="icon-text-height"></i></a>
         </div>
       </div>
       <textarea rows="3" class="span4"  ></textarea>
       <p><a href="#" class="btn btn-primary">Submit</a>   <a href="#" class="btn btn-success">Discuss</a></p>

     </div>

     <hr>
     <footer>
     <p>&copy; Million Integrals 2013</p>
     </footer>
   </div> <!-- /container -->
 </body>
</html>
